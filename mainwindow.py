from PySide6.QtWidgets import (QMainWindow, QWidget, QVBoxLayout, QHBoxLayout,
    QPushButton, QLabel, QMessageBox, QGridLayout, QDialog, QTextEdit)
from PySide6.QtCore import Qt
from PySide6.QtGui import QFont

from database import DatabaseManager
from dialogs import ConnectionDialog,AddFinanceDialog,  EditFinanceDialog, LoggerDialog, DataViewDialog, AddDataDialog, AddPointDialog, AddEmployeeDialog, AddProductDialog
from styles import STYLES

class MainWindow(QMainWindow):
    def __init__(self):
        super().__init__()
        self.db_manager = DatabaseManager()
        self.setWindowTitle("üçü –°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è '–ö—Ä–æ—à–∫–∞ –ö–∞—Ä—Ç–æ—à–∫–∞'")
        self.setMinimumSize(900, 650)
        self.setup_ui()
        self.apply_styles()

    def apply_styles(self):
        self.setStyleSheet(STYLES)

    def setup_ui(self):
        central_widget = QWidget()
        self.setCentralWidget(central_widget)

        layout = QVBoxLayout()
        central_widget.setLayout(layout)

        title = QLabel("üçü –ö—Ä–æ—à–∫–∞ –ö–∞—Ä—Ç–æ—à–∫–∞ - –°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è")
        title.setAlignment(Qt.AlignCenter)
        title.setObjectName("title")
        title.setFont(QFont("Arial", 60, QFont.Bold))
        layout.addWidget(title)

        grid_layout = QGridLayout()
        grid_layout.setSpacing(15)
        grid_layout.setContentsMargins(20, 20, 20, 20)

        buttons_info = [
            ("üìä –õ–æ–≥–∏", self.show_logger, 0, 0),
            ("üîå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î", self.show_connection_dialog, 0, 1),
            ("‚ûï –î–æ–±–∞–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ", self.show_add_data, 1, 0),
            ("üëÄ –ü—Ä–æ—Å–º–æ—Ç—Ä –¥–∞–Ω–Ω—ã—Ö", self.show_view_data, 1, 1),
            ("üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", self.refresh_all, 2, 0),
            ("‚ÑπÔ∏è –û –ø—Ä–æ–≥—Ä–∞–º–º–µ", self.show_about, 2, 1)
        ]

        for text, slot, row, col in buttons_info:
            btn = QPushButton(text)
            btn.setObjectName("primary")
            btn.clicked.connect(slot)
            btn.setMinimumHeight(80)
            btn.setMinimumWidth(180)
            grid_layout.addWidget(btn, row, col)

        layout.addLayout(grid_layout)

        self.status_label = QLabel("–°—Ç–∞—Ç—É—Å: –ù–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ –ë–î")
        self.status_label.setAlignment(Qt.AlignCenter)
        self.status_label.setFont(QFont("Arial", 10))
        layout.addWidget(self.status_label)

        self.update_status()

    def update_status(self):
        try:
            if self.db_manager.is_connected():
                self.status_label.setText("üåû –°—Ç–∞—Ç—É—Å: –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ –ë–î")
                self.status_label.setStyleSheet("color: #90cb25; font-weight: bold;")
            else:
                self.status_label.setText("üòî –°—Ç–∞—Ç—É—Å: –ù–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ –ë–î")
                self.status_label.setStyleSheet("color: #d9534f; font-weight: bold;")
        except:
            self.status_label.setText("üò† –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞")
            self.status_label.setStyleSheet("color: #d9534f; font-weight: bold;")

    def show_logger(self):
        dialog = LoggerDialog(self.db_manager, self)
        dialog.exec()

    def show_connection_dialog(self):
        dialog = ConnectionDialog(self.db_manager, self)
        dialog.exec()
        self.update_status()

    def show_add_data(self):
        if not self.db_manager.is_connected():
            QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–°–Ω–∞—á–∞–ª–∞ –ø–æ–¥–∫–ª—é—á–∏—Ç–µ—Å—å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
            return
        
        dialog = AddDataDialog(self.db_manager, self)
        if dialog.exec() == QDialog.Accepted:
            data_type = dialog.get_data_type()
            if data_type == 'point':
                self.add_point()
            elif data_type == 'employee':
                self.add_employee()
            elif data_type == 'product':
                self.add_product()
                self.add_product()
            elif data_type == 'finances': 
                self.add_finance()

    def show_view_data(self):
        if not self.db_manager.is_connected():
            QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–°–Ω–∞—á–∞–ª–∞ –ø–æ–¥–∫–ª—é—á–∏—Ç–µ—Å—å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
            return
        
        dialog = DataViewDialog(self.db_manager, self)
        dialog.exec()

    def refresh_all(self):
        if not self.db_manager.is_connected():
            QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–°–Ω–∞—á–∞–ª–∞ –ø–æ–¥–∫–ª—é—á–∏—Ç–µ—Å—å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
            return
        
        try:
            points_count = self.db_manager.get_points_count()
            employees_count = self.db_manager.get_employees_count()
            products_count = self.db_manager.get_products_count()
            total_revenue = self.db_manager.get_total_revenue()
            total_expenses = self.db_manager.get_total_expenses()
            profit = total_revenue - total_expenses
            
            data_exists = self.db_manager.check_data_exists()

            stats_text = f"""
            <h2>üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã</h2>
            
            <h3>–û—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏:</h3>
            <ul>
                <li><b>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ—á–µ–∫:</b> {points_count}</li>
                <li><b>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤:</b> {employees_count}</li>
                <li><b>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–¥—É–∫—Ç–æ–≤:</b> {products_count}</li>
                <li><b>–û–±—â–∏–π –¥–æ—Ö–æ–¥:</b> {total_revenue:,.2f} —Ä—É–±.</li>
                <li><b>–û–±—â–∏–µ —Ä–∞—Å—Ö–æ–¥—ã:</b> {total_expenses:,.2f} —Ä—É–±.</li>
                <li><b>–ü—Ä–∏–±—ã–ª—å:</b> <span style='color: {'#90cb25' if profit >= 0 else '#d9534f'}'>{profit:,.2f} —Ä—É–±.</span></li>
            </ul>
            
            <h3>–ù–∞–ª–∏—á–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ —Ç–∞–±–ª–∏—Ü–∞—Ö:</h3>
            <ul>
                <li>üìç –¢–æ—á–∫–∏: {'‚úÖ –ï—Å—Ç—å –¥–∞–Ω–Ω—ã–µ' if data_exists['points'] else '‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö'}</li>
                <li>üë• –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏: {'‚úÖ –ï—Å—Ç—å –¥–∞–Ω–Ω—ã–µ' if data_exists['employees'] else '‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö'}</li>
                <li>üçü –ü—Ä–æ–¥—É–∫—Ç—ã: {'‚úÖ –ï—Å—Ç—å –¥–∞–Ω–Ω—ã–µ' if data_exists['products'] else '‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö'}</li>
                <li>üí∞ –§–∏–Ω–∞–Ω—Å—ã: {'‚úÖ –ï—Å—Ç—å –¥–∞–Ω–Ω—ã–µ' if data_exists['transactions'] else '‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö'}</li>
            </ul>
            
            <p style='color: #fda601; font-weight: bold;'>
            –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞: {self.db_manager.get_connection_params()['host']}
            </p>
            """
            
            dialog = QDialog(self)
            dialog.setWindowTitle("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã")
            dialog.setMinimumSize(500, 600)
            
            layout = QVBoxLayout()

            stats_label = QLabel(stats_text)
            stats_label.setWordWrap(True)
            stats_label.setTextFormat(Qt.RichText)

            logs_label = QLabel("<h3>–ü–æ—Å–ª–µ–¥–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è –≤ —Å–∏—Å—Ç–µ–º–µ:</h3>")
            logs_text = QTextEdit()
            logs_text.setReadOnly(True)
            logs_text.setMaximumHeight(150)

            logs = self.db_manager.get_logs()
            recent_logs = ''.join(logs[-5:]) if logs else "–õ–æ–≥–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
            logs_text.setPlainText(recent_logs)

            close_btn = QPushButton("–ó–∞–∫—Ä—ã—Ç—å")
            close_btn.clicked.connect(dialog.accept)
            
            layout.addWidget(stats_label)
            layout.addWidget(logs_label)
            layout.addWidget(logs_text)
            layout.addWidget(close_btn)
            
            dialog.setLayout(layout)
            dialog.exec()
            
        except Exception as e:
            logging.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {str(e)}")
            QMessageBox.warning(self, "–û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É: {str(e)}")

    def show_about(self):
        about_text = """
        <h2>üçü –ö—Ä–æ—à–∫–∞ –ö–∞—Ä—Ç–æ—à–∫–∞</h2>
        <p><b>–°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞–º–∏ –±—ã—Å—Ç—Ä–æ–≥–æ –ø–∏—Ç–∞–Ω–∏—è</b></p>
        
        <p>–í–µ—Ä—Å–∏—è: 1.0</p>
        <p>–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫: –ö–æ–º–∞–Ω–¥–∞ –ö—Ä–æ—à–∫–∞ –ö–∞—Ä—Ç–æ—à–∫–∞</p>
        
        <p>–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å:</p>
        <ul>
            <li>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ—á–∫–∞–º–∏ –ø—Ä–æ–¥–∞–∂</li>
            <li>–£—á–µ—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤</li>
            <li>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞–º–∏</li>
            <li>–§–∏–Ω–∞–Ω—Å–æ–≤—ã–π —É—á–µ—Ç</li>
        </ul>
        
        <p style='color: #90cb25;'>–¶–≤–µ—Ç–æ–≤–∞—è —Å—Ö–µ–º–∞: –ë—Ä–µ–Ω–¥ –ö—Ä–æ—à–∫–∞ –ö–∞—Ä—Ç–æ—à–∫–∞</p>
        """
        QMessageBox.about(self, "–û –ø—Ä–æ–≥—Ä–∞–º–º–µ", about_text)

    def add_point(self):
        dialog = AddPointDialog(self)
        if dialog.exec() == QDialog.Accepted:
            data = dialog.get_data()
            if data['address']:
                if self.db_manager.insert_point(data['address'], data['phone']):
                    QMessageBox.information(self, "–£—Å–ø–µ—Ö", "–¢–æ—á–∫–∞ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞!")
                else:
                    QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç–æ—á–∫–∏")
            else:
                QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–ê–¥—Ä–µ—Å –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è")

    def add_employee(self):
        dialog = AddEmployeeDialog(self)
        if dialog.exec() == QDialog.Accepted:
            data = dialog.get_data()
            if all([data['full_name'], data['position'], data['salary'], data['schedule'], data['point_id']]):
                try:
                    salary = float(data['salary'])
                    point_id = int(data['point_id'])
                    if self.db_manager.insert_employee(data['full_name'], data['position'], salary, data['schedule'], point_id):
                        QMessageBox.information(self, "–£—Å–ø–µ—Ö", "–°–æ—Ç—Ä—É–¥–Ω–∏–∫ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!")
                    else:
                        QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞")
                except ValueError:
                    QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–ó–∞—Ä–ø–ª–∞—Ç–∞ –∏ ID —Ç–æ—á–∫–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —á–∏—Å–ª–∞–º–∏")
            else:
                QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–í—Å–µ –ø–æ–ª—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è")

    def add_product(self):
        dialog = AddProductDialog(self)
        if dialog.exec() == QDialog.Accepted:
            data = dialog.get_data()
            if all([data['name'], data['category'], data['cost_price'], data['selling_price']]):
                try:
                    cost_price = float(data['cost_price'])
                    selling_price = float(data['selling_price'])
                    if self.db_manager.insert_product(data['name'], data['category'], cost_price, selling_price):
                        QMessageBox.information(self, "–£—Å–ø–µ—Ö", "–ü—Ä–æ–¥—É–∫—Ç —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!")
                    else:
                        QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø—Ä–æ–¥—É–∫—Ç–∞")
                except ValueError:
                    QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–¶–µ–Ω—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —á–∏—Å–ª–∞–º–∏")
            else:
                QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–í—Å–µ –ø–æ–ª—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è")
                
    def add_finance(self):
        dialog = AddFinanceDialog(self.db_manager, self)
        if dialog.exec() == QDialog.Accepted:
            data = dialog.get_data()
            if all([data['point_id'], data['amount'], data['date']]):
                try:
                    point_id = int(data['point_id'])
                    amount = float(data['amount'])
                    
                    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ –¥–∞—Ç—ã (–±–∞–∑–æ–≤–∞—è)
                    if len(data['date']) != 10 or data['date'][4] != '-' or data['date'][7] != '-':
                        QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–î–∞—Ç–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ –ì–ì–ì–ì-–ú–ú-–î–î")
                        return
                    
                    if self.db_manager.insert_transaction(point_id, data['type'], amount, data['date'], data['description']):
                        QMessageBox.information(self, "–£—Å–ø–µ—Ö", "–§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞!")
                    else:
                        QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏")
                except ValueError:
                    QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "ID —Ç–æ—á–∫–∏ –∏ —Å—É–º–º–∞ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —á–∏—Å–ª–∞–º–∏")
            else:
                QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–ü–æ–ª—è —Å * –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è")