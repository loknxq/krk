from PySide6.QtWidgets import (QDialog, QVBoxLayout, QHBoxLayout, QFormLayout,
    QLineEdit, QPushButton, QLabel, QTextEdit, QComboBox,
    QTableWidget, QTableWidgetItem, QHeaderView, QMessageBox,
    QTabWidget, QWidget, QGroupBox, QInputDialog)
from PySide6.QtCore import Qt
import logging

# –£–¥–∞–ª–µ–Ω–∏–µ –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∏–µ
class EditDataDialog(QDialog):
    def __init__(self, db_manager, table_name, parent=None):
        super().__init__(parent)
        self.db_manager = db_manager
        self.table_name = table_name
        self.setWindowTitle(f"–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ - {table_name}")
        self.setFixedSize(300, 250)
        self.setup_ui()

    def setup_ui(self):
        layout = QVBoxLayout()

        label = QLabel(f"–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã '{self.table_name}':")
        layout.addWidget(label)

        self.edit_btn = QPushButton("‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç—Ä–æ–∫—É")
        self.delete_btn = QPushButton("üóëÔ∏è –£–¥–∞–ª–∏—Ç—å —Å—Ç—Ä–æ–∫—É")
        self.cancel_btn = QPushButton("–û—Ç–º–µ–Ω–∞")

        self.edit_btn.clicked.connect(self.edit_row)
        self.delete_btn.clicked.connect(self.delete_row)
        self.cancel_btn.clicked.connect(self.reject)

        layout.addWidget(self.edit_btn)
        layout.addWidget(self.delete_btn)
        layout.addWidget(self.cancel_btn)

        self.setLayout(layout)

    def edit_row(self):
        """–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –ø–æ ID"""
        id, ok = QInputDialog.getInt(self, "–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏", 
                                f"–í–≤–µ–¥–∏—Ç–µ ID —Å—Ç—Ä–æ–∫–∏ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ç–∞–±–ª–∏—Ü–µ '{self.table_name}':",
                                1, 1, 1000000, 1)
        if ok:
            self.action_type = 'edit'
            self.row_id = id
            self.accept()

    def delete_row(self):
        """–£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –ø–æ ID"""
        id, ok = QInputDialog.getInt(self, "–£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏",
                                f"–í–≤–µ–¥–∏—Ç–µ ID —Å—Ç—Ä–æ–∫–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∏–∑ —Ç–∞–±–ª–∏—Ü—ã '{self.table_name}':",
                                1, 1, 1000000, 1)
        if ok:
            self.action_type = 'delete'
            self.row_id = id
            self.accept()

    def get_action_info(self):
        return self.action_type, self.row_id

class ConnectionDialog(QDialog):
    def __init__(self, db_manager, parent=None):
        super().__init__(parent)
        self.db_manager = db_manager
        self.setWindowTitle("–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–∞–∑–µ –î–∞–Ω–Ω—ã—Ö")
        self.setFixedSize(600, 350)
        self.setup_ui()
        self.load_current_params()

    def setup_ui(self):
        layout = QVBoxLayout()

        # –§–æ—Ä–º–∞ –≤–≤–æ–¥–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
        form_layout = QFormLayout()

        self.host_input = QLineEdit()
        self.port_input = QLineEdit()
        self.dbname_input = QLineEdit()
        self.user_input = QLineEdit()
        self.password_input = QLineEdit()
        self.password_input.setEchoMode(QLineEdit.Password)

        form_layout.addRow("–•–æ—Å—Ç:", self.host_input)
        form_layout.addRow("–ü–æ—Ä—Ç:", self.port_input)
        form_layout.addRow("–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö:", self.dbname_input)
        form_layout.addRow("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:", self.user_input)
        form_layout.addRow("–ü–∞—Ä–æ–ª—å:", self.password_input)

        layout.addLayout(form_layout)

        # –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
        buttons_layout = QHBoxLayout()

        self.connect_btn = QPushButton("–ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è")
        self.recreate_btn = QPushButton("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü–∞–º–∏")
        # self.env_btn = QPushButton("–í–∑—è—Ç—å –∏–∑ –æ–∫—Ä—É–∂–µ–Ω–∏—è")

        self.connect_btn.clicked.connect(self.connect)
        self.recreate_btn.clicked.connect(self.recreate_tables)
        # self.env_btn.clicked.connect(self.load_from_env)

        buttons_layout.addWidget(self.connect_btn)
        buttons_layout.addWidget(self.recreate_btn)
        # buttons_layout.addWidget(self.env_btn)

        layout.addLayout(buttons_layout)

        # –°—Ç–∞—Ç—É—Å
        self.status_label = QLabel("üòî –ù–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–æ")
        self.status_label.setAlignment(Qt.AlignCenter)
        self.status_label.setStyleSheet("color: #d9534f; font-weight: bold;")
        layout.addWidget(self.status_label)

        self.setLayout(layout)

    def load_current_params(self):
        params = self.db_manager.get_connection_params()
        self.host_input.setText(params.get('host', 'localhost'))
        self.port_input.setText(params.get('port', '5432'))
        self.dbname_input.setText(params.get('dbname', 'postgres'))
        self.user_input.setText(params.get('user', 'postgres'))
        self.password_input.setText(params.get('password', ''))

    def connect(self):
        params = {
            'host': self.host_input.text(),
            'port': self.port_input.text(),
            'dbname': self.dbname_input.text(),
            'user': self.user_input.text(),
            'password': self.password_input.text()
        }

        self.db_manager.set_connection_params(params)

        if self.db_manager.connect():
            self.status_label.setText("üåû –ü–æ–¥–∫–ª—é—á–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ")
            self.status_label.setStyleSheet("color: #90cb25; font-weight: bold;")
        else:
            self.status_label.setText("üò† –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è")
            self.status_label.setStyleSheet("color: #d9534f; font-weight: bold;")

    def recreate_tables(self):
        """–û—Ç–∫—Ä—ã–≤–∞–µ—Ç –¥–∏–∞–ª–æ–≥ –≤—ã–±–æ—Ä–∞ –¥–µ–π—Å—Ç–≤–∏—è —Å —Ç–∞–±–ª–∏—Ü–∞–º–∏"""
        dialog = RecreateTablesDialog(self.db_manager, self)
        if dialog.exec() == QDialog.Accepted:
            action_type = dialog.get_action_type()
            
            if action_type == 'sample_data':
                self.sample_data_action()
            elif action_type == 'recreate':
                self.recreate_tables_action()

    def sample_data_action(self):
        """–í—Å—Ç–∞–≤–ª—è–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ"""
        if self.db_manager.insert_sample_data():
            QMessageBox.information(self, "–£—Å–ø–µ—Ö", "–¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã")
        else:
            QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ")

    def recreate_tables_action(self):
        """–ü–æ–ª–Ω–æ—Å—Ç—å—é –ø–µ—Ä–µ—Å–æ–∑–¥–∞–µ—Ç —Ç–∞–±–ª–∏—Ü—ã"""
        if self.db_manager.recreate_tables():
            QMessageBox.information(self, "–£—Å–ø–µ—Ö", "–¢–∞–±–ª–∏—Ü—ã —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω—ã")
        else:
            QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å —Ç–∞–±–ª–∏—Ü—ã")

class LoggerDialog(QDialog):
    def __init__(self, db_manager, parent=None):
        super().__init__(parent)
        self.db_manager = db_manager
        self.setWindowTitle("–õ–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
        self.setMinimumSize(600, 400)
        self.setup_ui()
        self.load_logs()

    def setup_ui(self):
        layout = QVBoxLayout()

        self.log_text = QTextEdit()
        self.log_text.setReadOnly(True)
        self.log_text.setObjectName("Logger")

        refresh_btn = QPushButton("–û–±–Ω–æ–≤–∏—Ç—å –ª–æ–≥–∏")
        refresh_btn.clicked.connect(self.load_logs)

        layout.addWidget(QLabel("–õ–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:"))
        layout.addWidget(self.log_text)
        layout.addWidget(refresh_btn)

        self.setLayout(layout)

    def load_logs(self):
        logs = self.db_manager.get_logs()
        self.log_text.setPlainText(''.join(logs[-100:]))

class DataViewDialog(QDialog):
    def __init__(self, db_manager, parent=None):
        super().__init__(parent)
        self.db_manager = db_manager
        self.setWindowTitle("–ü—Ä–æ—Å–º–æ—Ç—Ä –¥–∞–Ω–Ω—ã—Ö")
        self.setMinimumSize(900, 700)
        self.setup_ui()
        self.load_data()

    def setup_ui(self):
        layout = QVBoxLayout()

        # –°–æ–∑–¥–∞–µ–º –≤–∫–ª–∞–¥–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–π —Ç–∞–±–ª–∏—Ü—ã
        self.tabs = QTabWidget()

        # –°–æ–∑–¥–∞–µ–º –≤–∫–ª–∞–¥–∫–∏ —Å –∫–Ω–æ–ø–∫–∞–º–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        self.points_tab = self.create_table_tab("–¢–æ—á–∫–∏", ["ID", "–ê–¥—Ä–µ—Å", "–¢–µ–ª–µ—Ñ–æ–Ω", "–ú–µ–Ω–µ–¥–∂–µ—Ä ID"])
        self.employees_tab = self.create_table_tab("–°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏", ["ID", "–§–ò–û", "–î–æ–ª–∂–Ω–æ—Å—Ç—å", "–ó–∞—Ä–ø–ª–∞—Ç–∞", "–ì—Ä–∞—Ñ–∏–∫", "–¢–æ—á–∫–∞ ID"])
        self.products_tab = self.create_table_tab("–ü—Ä–æ–¥—É–∫—Ç—ã", ["ID", "–ù–∞–∑–≤–∞–Ω–∏–µ", "–ö–∞—Ç–µ–≥–æ—Ä–∏—è", "–°–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç—å", "–¶–µ–Ω–∞ –ø—Ä–æ–¥–∞–∂–∏"])
        self.finances_tab = self.create_table_tab("–§–∏–Ω–∞–Ω—Å—ã", ["ID", "–¢–æ—á–∫–∞ ID", "–¢–∏–ø", "–°—É–º–º–∞", "–î–∞—Ç–∞", "–û–ø–∏—Å–∞–Ω–∏–µ"])
        
        self.tabs.addTab(self.points_tab, "–¢–æ—á–∫–∏")
        self.tabs.addTab(self.employees_tab, "–°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏")
        self.tabs.addTab(self.products_tab, "–ü—Ä–æ–¥—É–∫—Ç—ã")
        self.tabs.addTab(self.finances_tab, "–§–∏–Ω–∞–Ω—Å—ã")

        layout.addWidget(self.tabs)
        
        # –ö–Ω–æ–ø–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
        refresh_btn = QPushButton("üîÑ –û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ")
        refresh_btn.clicked.connect(self.load_data)
        layout.addWidget(refresh_btn)

        self.setLayout(layout)

    def create_table_tab(self, title, headers):
        widget = QWidget()
        layout = QVBoxLayout(widget)

        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å –∫–Ω–æ–ø–∫–æ–π —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        header_layout = QHBoxLayout()
        header_layout.addWidget(QLabel(f"–¢–∞–±–ª–∏—Ü–∞: {title}"))
        
        edit_btn = QPushButton("‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å")
        edit_btn.clicked.connect(lambda: self.open_edit_dialog(title))
        header_layout.addWidget(edit_btn)
        header_layout.addStretch()
        
        layout.addLayout(header_layout)

        table = QTableWidget(0, len(headers))
        table.setHorizontalHeaderLabels(headers)
        table.horizontalHeader().setSectionResizeMode(QHeaderView.Stretch)

        layout.addWidget(table)
        
        return widget

    def open_edit_dialog(self, table_name):
        """–û—Ç–∫—Ä—ã–≤–∞–µ—Ç –¥–∏–∞–ª–æ–≥ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Ç–∞–±–ª–∏—Ü—ã"""
        dialog = EditDataDialog(self.db_manager, table_name, self)
        if dialog.exec() == QDialog.Accepted:
            action_type, row_id = dialog.get_action_info()
            self.handle_table_action(table_name, action_type, row_id)

    def handle_table_action(self, table_name, action_type, row_id):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –¥–µ–π—Å—Ç–≤–∏—è —Å —Ç–∞–±–ª–∏—Ü–∞–º–∏"""
        try:
            if action_type == 'delete':
                success = False
                if table_name == "–¢–æ—á–∫–∏":
                    success = self.db_manager.delete_point(row_id)
                elif table_name == "–°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏":
                    success = self.db_manager.delete_employee(row_id)
                elif table_name == "–ü—Ä–æ–¥—É–∫—Ç—ã":
                    success = self.db_manager.delete_product(row_id)
                elif table_name == "–§–∏–Ω–∞–Ω—Å—ã":
                    success = self.db_manager.delete_transaction(row_id)
                
                if success:
                    QMessageBox.information(self, "–£—Å–ø–µ—Ö", f"–°—Ç—Ä–æ–∫–∞ {row_id} —É–¥–∞–ª–µ–Ω–∞ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã '{table_name}'")
                    self.load_data()
                else:
                    QMessageBox.warning(self, "–û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å—Ç—Ä–æ–∫—É {row_id}")
            
            elif action_type == 'edit':
                current_data = None
                if table_name == "–¢–æ—á–∫–∏":
                    current_data = self.db_manager.get_point_by_id(row_id)
                    if current_data:
                        dialog = EditPointDialog(current_data, self)
                        if dialog.exec() == QDialog.Accepted:
                            data = dialog.get_data()
                            if data['address']:
                                if self.db_manager.update_point(row_id, data['address'], data['phone']):
                                    QMessageBox.information(self, "–£—Å–ø–µ—Ö", "–¢–æ—á–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞!")
                                    self.load_data()
                                else:
                                    QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ç–æ—á–∫–∏")
                            else:
                                QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–ê–¥—Ä–µ—Å –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è")
                    
                elif table_name == "–°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏":
                    current_data = self.db_manager.get_employee_by_id(row_id)
                    if current_data:
                        dialog = EditEmployeeDialog(current_data, self)
                        if dialog.exec() == QDialog.Accepted:
                            data = dialog.get_data()
                            if all([data['full_name'], data['position'], data['salary'], data['schedule'], data['point_id']]):
                                try:
                                    salary = float(data['salary'])
                                    point_id = int(data['point_id'])
                                    if self.db_manager.update_employee(row_id, data['full_name'], data['position'], salary, data['schedule'], point_id):
                                        QMessageBox.information(self, "–£—Å–ø–µ—Ö", "–°–æ—Ç—Ä—É–¥–Ω–∏–∫ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!")
                                        self.load_data()
                                    else:
                                        QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞")
                                except ValueError:
                                    QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–ó–∞—Ä–ø–ª–∞—Ç–∞ –∏ ID —Ç–æ—á–∫–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —á–∏—Å–ª–∞–º–∏")
                            else:
                                QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–í—Å–µ –ø–æ–ª—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è")
                    
                elif table_name == "–ü—Ä–æ–¥—É–∫—Ç—ã":
                    current_data = self.db_manager.get_product_by_id(row_id)
                    if current_data:
                        dialog = EditProductDialog(current_data, self)
                        if dialog.exec() == QDialog.Accepted:
                            data = dialog.get_data()
                            if all([data['name'], data['category'], data['cost_price'], data['selling_price']]):
                                try:
                                    cost_price = float(data['cost_price'])
                                    selling_price = float(data['selling_price'])
                                    if self.db_manager.update_product(row_id, data['name'], data['category'], cost_price, selling_price):
                                        QMessageBox.information(self, "–£—Å–ø–µ—Ö", "–ü—Ä–æ–¥—É–∫—Ç —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!")
                                        self.load_data()
                                    else:
                                        QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø—Ä–æ–¥—É–∫—Ç–∞")
                                except ValueError:
                                    QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–¶–µ–Ω—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —á–∏—Å–ª–∞–º–∏")
                            else:
                                QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–í—Å–µ –ø–æ–ª—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è")
                    
                elif table_name == "–§–∏–Ω–∞–Ω—Å—ã":
                    current_data = self.db_manager.get_transaction_by_id(row_id)
                    if current_data:
                        dialog = EditFinanceDialog(current_data, self)
                        if dialog.exec() == QDialog.Accepted:
                            data = dialog.get_data()
                            if all([data['point_id'], data['amount'], data['date']]):
                                try:
                                    point_id = int(data['point_id'])
                                    amount = float(data['amount'])
                                    
                                    if len(data['date']) != 10 or data['date'][4] != '-' or data['date'][7] != '-':
                                        QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–î–∞—Ç–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ –ì–ì–ì–ì-–ú–ú-–î–î")
                                        return
                                    
                                    if self.db_manager.update_transaction(row_id, point_id, data['type'], amount, data['date'], data['description']):
                                        QMessageBox.information(self, "–£—Å–ø–µ—Ö", "–§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞!")
                                        self.load_data()
                                    else:
                                        QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏")
                                except ValueError:
                                    QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "ID —Ç–æ—á–∫–∏ –∏ —Å—É–º–º–∞ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —á–∏—Å–ª–∞–º–∏")
                            else:
                                QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–ü–æ–ª—è —Å * –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è")
                    else:
                        QMessageBox.warning(self, "–û—à–∏–±–∫–∞", f"–§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è —Å ID {row_id} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
                
                if not current_data and table_name != "–§–∏–Ω–∞–Ω—Å—ã":
                    QMessageBox.warning(self, "–û—à–∏–±–∫–∞", f"–ó–∞–ø–∏—Å—å —Å ID {row_id} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ —Ç–∞–±–ª–∏—Ü–µ '{table_name}'")
                    
        except Exception as e:
            logging.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–µ–π—Å—Ç–≤–∏—è: {str(e)}")
            QMessageBox.warning(self, "–û—à–∏–±–∫–∞", f"–û—à–∏–±–∫–∞: {str(e)}")

    def load_data(self):
        """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤ —Ç–∞–±–ª–∏—Ü—ã"""
        try:
            # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã
            for i in range(self.tabs.count()):
                tab_widget = self.tabs.widget(i)
                table = tab_widget.findChild(QTableWidget)
                if table:
                    if i == 0:
                        data = self.db_manager.get_points()
                    elif i == 1:
                        data = self.db_manager.get_employees()
                    elif i == 2:
                        data = self.db_manager.get_products()
                    elif i == 3:
                        data = self.db_manager.get_finances()
                    else:
                        data = []
                    
                    self.load_table_data(table, data)
                    
        except Exception as e:
            logging.error(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö: {str(e)}")
            QMessageBox.warning(self, "–û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ: {str(e)}")

    def load_table_data(self, table, data):
        table.verticalHeader().setDefaultSectionSize(35)
        if not data:
            table.setRowCount(1)
            table.setItem(0, 0, QTableWidgetItem("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö"))
            return
            
        table.setRowCount(len(data))
        for row_idx, row_data in enumerate(data):
            for col_idx, cell_data in enumerate(row_data):
                item = QTableWidgetItem(str(cell_data) if cell_data is not None else "")
                item.setFlags(item.flags() & ~Qt.ItemIsEditable)
                table.setItem(row_idx, col_idx, item)

class AddDataDialog(QDialog):
    def __init__(self, db_manager, parent=None):
        super().__init__(parent)
        self.db_manager = db_manager
        self.setWindowTitle("–î–æ–±–∞–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ")
        self.setFixedSize(300, 370)
        self.setup_ui()

    def setup_ui(self):
        layout = QVBoxLayout()

        label = QLabel("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è:")
        layout.addWidget(label)

        self.point_btn = QPushButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ç–æ—á–∫—É")
        self.employee_btn = QPushButton("üë®‚Äçüíº –î–æ–±–∞–≤–∏—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞")
        self.product_btn = QPushButton("üçü –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç")
        self.finances_btn = QPushButton("üí∞ –î–æ–±–∞–≤–∏—Ç—å —Ñ–∏–Ω–∞–Ω—Å–æ–≤—É—é –æ–ø–µ—Ä–∞—Ü–∏—é")

        self.point_btn.clicked.connect(lambda: self.accept_with_type('point'))
        self.employee_btn.clicked.connect(lambda: self.accept_with_type('employee'))
        self.product_btn.clicked.connect(lambda: self.accept_with_type('product'))
        self.finances_btn.clicked.connect(lambda: self.accept_with_type('finances'))

        layout.addWidget(self.point_btn)
        layout.addWidget(self.employee_btn)
        layout.addWidget(self.product_btn)
        layout.addWidget(self.finances_btn)

        cancel_btn = QPushButton("–û—Ç–º–µ–Ω–∞")
        cancel_btn.clicked.connect(self.reject)
        layout.addWidget(cancel_btn)

        self.setLayout(layout)
        self.data_type = None

    def accept_with_type(self, data_type):
        self.data_type = data_type
        super().accept()

    def get_data_type(self):
        return self.data_type

class AddPointDialog(QDialog):
    def __init__(self, parent=None):
        super().__init__(parent)
        self.setWindowTitle("–î–æ–±–∞–≤–∏—Ç—å —Ç–æ—á–∫—É")
        self.setFixedSize(400, 200)
        self.setup_ui()

    def setup_ui(self):
        layout = QVBoxLayout()

        form_layout = QFormLayout()

        self.address_input = QLineEdit()
        self.phone_input = QLineEdit()

        form_layout.addRow("–ê–¥—Ä–µ—Å:*", self.address_input)
        form_layout.addRow("–¢–µ–ª–µ—Ñ–æ–Ω:", self.phone_input)

        layout.addLayout(form_layout)

        buttons_layout = QHBoxLayout()
        self.add_btn = QPushButton("–î–æ–±–∞–≤–∏—Ç—å")
        self.cancel_btn = QPushButton("–û—Ç–º–µ–Ω–∞")

        self.add_btn.clicked.connect(self.accept)
        self.cancel_btn.clicked.connect(self.reject)

        buttons_layout.addWidget(self.add_btn)
        buttons_layout.addWidget(self.cancel_btn)

        layout.addLayout(buttons_layout)
        self.setLayout(layout)

    def get_data(self):
        return {
            'address': self.address_input.text().strip(),
            'phone': self.phone_input.text().strip() or None
        }
    
class AddFinanceDialog(QDialog):
    def __init__(self, db_manager, parent=None):
        super().__init__(parent)
        self.db_manager = db_manager
        self.setWindowTitle("–î–æ–±–∞–≤–∏—Ç—å —Ñ–∏–Ω–∞–Ω—Å–æ–≤—É—é –æ–ø–µ—Ä–∞—Ü–∏—é")
        self.setFixedSize(400, 350)
        self.setup_ui()

    def setup_ui(self):
        layout = QVBoxLayout()

        form_layout = QFormLayout()

        self.point_id_input = QLineEdit()
        self.type_combo = QComboBox()
        self.type_combo.addItems(["–î–æ—Ö–æ–¥", "–†–∞—Å—Ö–æ–¥"])
        self.amount_input = QLineEdit()
        self.date_input = QLineEdit()
        self.date_input.setPlaceholderText("–ì–ì–ì–ì-–ú–ú-–î–î")
        self.description_input = QLineEdit()

        form_layout.addRow("ID —Ç–æ—á–∫–∏:*", self.point_id_input)
        form_layout.addRow("–¢–∏–ø:*", self.type_combo)
        form_layout.addRow("–°—É–º–º–∞:*", self.amount_input)
        form_layout.addRow("–î–∞—Ç–∞ (–ì–ì–ì–ì-–ú–ú-–î–î):*", self.date_input)
        form_layout.addRow("–û–ø–∏—Å–∞–Ω–∏–µ:", self.description_input)

        layout.addLayout(form_layout)

        buttons_layout = QHBoxLayout()
        self.add_btn = QPushButton("–î–æ–±–∞–≤–∏—Ç—å")
        self.cancel_btn = QPushButton("–û—Ç–º–µ–Ω–∞")

        self.add_btn.clicked.connect(self.accept)
        self.cancel_btn.clicked.connect(self.reject)

        buttons_layout.addWidget(self.add_btn)
        buttons_layout.addWidget(self.cancel_btn)

        layout.addLayout(buttons_layout)
        self.setLayout(layout)

    def get_data(self):
        return {
            'point_id': self.point_id_input.text().strip(),
            'type': self.type_combo.currentText(),
            'amount': self.amount_input.text().strip(),
            'date': self.date_input.text().strip(),
            'description': self.description_input.text().strip() or None
        }
class AddEmployeeDialog(QDialog):
    def __init__(self, parent=None):
        super().__init__(parent)
        self.setWindowTitle("–î–æ–±–∞–≤–∏—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞")
        self.setFixedSize(400, 300)
        self.setup_ui()

    def setup_ui(self):
        layout = QVBoxLayout()

        form_layout = QFormLayout()

        self.name_input = QLineEdit()
        self.position_input = QLineEdit()
        self.salary_input = QLineEdit()
        self.schedule_input = QLineEdit()
        self.point_id_input = QLineEdit()

        form_layout.addRow("–§–ò–û:*", self.name_input)
        form_layout.addRow("–î–æ–ª–∂–Ω–æ—Å—Ç—å:*", self.position_input)
        form_layout.addRow("–ó–∞—Ä–ø–ª–∞—Ç–∞:*", self.salary_input)
        form_layout.addRow("–ì—Ä–∞—Ñ–∏–∫:*", self.schedule_input)
        form_layout.addRow("ID —Ç–æ—á–∫–∏:*", self.point_id_input)

        layout.addLayout(form_layout)

        buttons_layout = QHBoxLayout()
        self.add_btn = QPushButton("–î–æ–±–∞–≤–∏—Ç—å")
        self.cancel_btn = QPushButton("–û—Ç–º–µ–Ω–∞")

        self.add_btn.clicked.connect(self.accept)
        self.cancel_btn.clicked.connect(self.reject)

        buttons_layout.addWidget(self.add_btn)
        buttons_layout.addWidget(self.cancel_btn)

        layout.addLayout(buttons_layout)
        self.setLayout(layout)

    def get_data(self):
        return {
            'full_name': self.name_input.text().strip(),
            'position': self.position_input.text().strip(),
            'salary': self.salary_input.text().strip(),
            'schedule': self.schedule_input.text().strip(),
            'point_id': self.point_id_input.text().strip()
        }
    
class AddProductDialog(QDialog):
    def __init__(self, parent=None):
        super().__init__(parent)
        self.setWindowTitle("–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç")
        self.setFixedSize(400, 300)
        self.setup_ui()

    def setup_ui(self):
        layout = QVBoxLayout()

        form_layout = QFormLayout()

        self.name_input = QLineEdit()
        self.category_input = QLineEdit()
        self.cost_input = QLineEdit()
        self.price_input = QLineEdit()

        form_layout.addRow("–ù–∞–∑–≤–∞–Ω–∏–µ:*", self.name_input)
        form_layout.addRow("–ö–∞—Ç–µ–≥–æ—Ä–∏—è:*", self.category_input)
        form_layout.addRow("–°–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç—å:*", self.cost_input)
        form_layout.addRow("–¶–µ–Ω–∞ –ø—Ä–æ–¥–∞–∂–∏:*", self.price_input)

        layout.addLayout(form_layout)

        buttons_layout = QHBoxLayout()
        self.add_btn = QPushButton("–î–æ–±–∞–≤–∏—Ç—å")
        self.cancel_btn = QPushButton("–û—Ç–º–µ–Ω–∞")

        self.add_btn.clicked.connect(self.accept)
        self.cancel_btn.clicked.connect(self.reject)

        buttons_layout.addWidget(self.add_btn)
        buttons_layout.addWidget(self.cancel_btn)

        layout.addLayout(buttons_layout)
        self.setLayout(layout)

    def get_data(self):
        return {
            'name': self.name_input.text().strip(),
            'category': self.category_input.text().strip(),
            'cost_price': self.cost_input.text().strip(),
            'selling_price': self.price_input.text().strip()
        }
class RecreateTablesDialog(QDialog):
    def __init__(self, db_manager, parent=None):
        super().__init__(parent)
        self.db_manager = db_manager
        self.setWindowTitle("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü–∞–º–∏")
        self.setFixedSize(400, 250)
        self.setup_ui()

    def setup_ui(self):
        layout = QVBoxLayout()

        label = QLabel("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ —Å —Ç–∞–±–ª–∏—Ü–∞–º–∏:")
        label.setAlignment(Qt.AlignCenter)
        layout.addWidget(label)

        # –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
        # self.clear_btn = QPushButton("üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å —Ç–∞–±–ª–∏—Ü—ã (—É–¥–∞–ª–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ)")
        self.sample_data_btn = QPushButton("üìä –í—Å—Ç–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ")
        self.recreate_btn = QPushButton("üîÑ –ü–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å —Ç–∞–±–ª–∏—Ü—ã")

        # self.clear_btn.clicked.connect(lambda: self.accept_with_action('clear'))
        self.sample_data_btn.clicked.connect(lambda: self.accept_with_action('sample_data'))
        self.recreate_btn.clicked.connect(lambda: self.accept_with_action('recreate'))

        # layout.addWidget(self.clear_btn)
        layout.addWidget(self.sample_data_btn)
        layout.addWidget(self.recreate_btn)

        cancel_btn = QPushButton("–û—Ç–º–µ–Ω–∞")
        cancel_btn.clicked.connect(self.reject)
        layout.addWidget(cancel_btn)

        self.setLayout(layout)
        self.action_type = None

    def accept_with_action(self, action_type):
        self.action_type = action_type
        super().accept()

    def get_action_type(self):
        return self.action_type
# –î–∏–∞–ª–æ–≥–∏ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
class EditPointDialog(QDialog):
    def __init__(self, point_data, parent=None):
        super().__init__(parent)
        self.point_data = point_data
        self.setWindowTitle("–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ—á–∫–∏")
        self.setFixedSize(400, 300)
        self.setup_ui()

    def setup_ui(self):
        layout = QVBoxLayout()

        form_layout = QFormLayout()

        self.address_input = QLineEdit()
        self.phone_input = QLineEdit()
        self.manager_id_input = QLineEdit()

        # –ó–∞–ø–æ–ª–Ω—è–µ–º —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ
        self.address_input.setText(self.point_data[1] if self.point_data[1] else "")
        self.phone_input.setText(self.point_data[2] if self.point_data[2] else "")
        self.manager_id_input.setText(str(self.point_data[3]) if self.point_data[3] else "")

        form_layout.addRow("–ê–¥—Ä–µ—Å:*", self.address_input)
        form_layout.addRow("–¢–µ–ª–µ—Ñ–æ–Ω:", self.phone_input)
        form_layout.addRow("–ú–µ–Ω–µ–¥–∂–µ—Ä ID:", self.manager_id_input)

        layout.addLayout(form_layout)

        buttons_layout = QHBoxLayout()
        self.save_btn = QPushButton("–°–æ—Ö—Ä–∞–Ω–∏—Ç—å")
        self.cancel_btn = QPushButton("–û—Ç–º–µ–Ω–∞")

        self.save_btn.clicked.connect(self.accept)
        self.cancel_btn.clicked.connect(self.reject)

        buttons_layout.addWidget(self.save_btn)
        buttons_layout.addWidget(self.cancel_btn)

        layout.addLayout(buttons_layout)
        self.setLayout(layout)

    def get_data(self):
        return {
            'address': self.address_input.text().strip(),
            'phone': self.phone_input.text().strip() or None,
            'manager_id': self.manager_id_input.text().strip() or None
        }

class EditEmployeeDialog(QDialog):
    def __init__(self, employee_data, parent=None):
        super().__init__(parent)
        self.employee_data = employee_data
        self.setWindowTitle("–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞")
        self.setFixedSize(400, 300)
        self.setup_ui()

    def setup_ui(self):
        layout = QVBoxLayout()

        form_layout = QFormLayout()

        self.name_input = QLineEdit()
        self.position_input = QLineEdit()
        self.salary_input = QLineEdit()
        self.schedule_input = QLineEdit()
        self.point_id_input = QLineEdit()

        # –ó–∞–ø–æ–ª–Ω—è–µ–º —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ
        self.name_input.setText(self.employee_data[1] if self.employee_data[1] else "")
        self.position_input.setText(self.employee_data[2] if self.employee_data[2] else "")
        self.salary_input.setText(str(self.employee_data[3]) if self.employee_data[3] else "")
        self.schedule_input.setText(self.employee_data[4] if self.employee_data[4] else "")
        self.point_id_input.setText(str(self.employee_data[5]) if self.employee_data[5] else "")

        form_layout.addRow("–§–ò–û:*", self.name_input)
        form_layout.addRow("–î–æ–ª–∂–Ω–æ—Å—Ç—å:*", self.position_input)
        form_layout.addRow("–ó–∞—Ä–ø–ª–∞—Ç–∞:*", self.salary_input)
        form_layout.addRow("–ì—Ä–∞—Ñ–∏–∫:*", self.schedule_input)
        form_layout.addRow("ID —Ç–æ—á–∫–∏:*", self.point_id_input)

        layout.addLayout(form_layout)

        buttons_layout = QHBoxLayout()
        self.save_btn = QPushButton("–°–æ—Ö—Ä–∞–Ω–∏—Ç—å")
        self.cancel_btn = QPushButton("–û—Ç–º–µ–Ω–∞")

        self.save_btn.clicked.connect(self.accept)
        self.cancel_btn.clicked.connect(self.reject)

        buttons_layout.addWidget(self.save_btn)
        buttons_layout.addWidget(self.cancel_btn)

        layout.addLayout(buttons_layout)
        self.setLayout(layout)

    def get_data(self):
        return {
            'full_name': self.name_input.text().strip(),
            'position': self.position_input.text().strip(),
            'salary': self.salary_input.text().strip(),
            'schedule': self.schedule_input.text().strip(),
            'point_id': self.point_id_input.text().strip()
        }

class EditProductDialog(QDialog):
    def __init__(self, product_data, parent=None):
        super().__init__(parent)
        self.product_data = product_data
        self.setWindowTitle("–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞")
        self.setFixedSize(400, 300)
        self.setup_ui()

    def setup_ui(self):
        layout = QVBoxLayout()

        form_layout = QFormLayout()

        self.name_input = QLineEdit()
        self.category_input = QLineEdit()
        self.cost_input = QLineEdit()
        self.price_input = QLineEdit()

        # –ó–∞–ø–æ–ª–Ω—è–µ–º —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ
        self.name_input.setText(self.product_data[1] if self.product_data[1] else "")
        self.category_input.setText(self.product_data[2] if self.product_data[2] else "")
        self.cost_input.setText(str(self.product_data[3]) if self.product_data[3] else "")
        self.price_input.setText(str(self.product_data[4]) if self.product_data[4] else "")

        form_layout.addRow("–ù–∞–∑–≤–∞–Ω–∏–µ:*", self.name_input)
        form_layout.addRow("–ö–∞—Ç–µ–≥–æ—Ä–∏—è:*", self.category_input)
        form_layout.addRow("–°–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç—å:*", self.cost_input)
        form_layout.addRow("–¶–µ–Ω–∞ –ø—Ä–æ–¥–∞–∂–∏:*", self.price_input)

        layout.addLayout(form_layout)

        buttons_layout = QHBoxLayout()
        self.save_btn = QPushButton("–°–æ—Ö—Ä–∞–Ω–∏—Ç—å")
        self.cancel_btn = QPushButton("–û—Ç–º–µ–Ω–∞")

        self.save_btn.clicked.connect(self.accept)
        self.cancel_btn.clicked.connect(self.reject)

        buttons_layout.addWidget(self.save_btn)
        buttons_layout.addWidget(self.cancel_btn)

        layout.addLayout(buttons_layout)
        self.setLayout(layout)

    def get_data(self):
        return {
            'name': self.name_input.text().strip(),
            'category': self.category_input.text().strip(),
            'cost_price': self.cost_input.text().strip(),
            'selling_price': self.price_input.text().strip()
        }
class EditFinanceDialog(QDialog):
    def __init__(self, finance_data, parent=None):
        super().__init__(parent)
        self.finance_data = finance_data
        self.setWindowTitle("–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏")
        self.setFixedSize(400, 350)
        self.setup_ui()

    def setup_ui(self):
        layout = QVBoxLayout()

        form_layout = QFormLayout()

        self.point_id_input = QLineEdit()
        self.type_combo = QComboBox()
        self.type_combo.addItems(["–î–æ—Ö–æ–¥", "–†–∞—Å—Ö–æ–¥"])
        self.amount_input = QLineEdit()
        self.date_input = QLineEdit()
        self.date_input.setPlaceholderText("–ì–ì–ì–ì-–ú–ú-–î–î")
        self.description_input = QLineEdit()

        # –ó–∞–ø–æ–ª–Ω—è–µ–º —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ
        if self.finance_data:
            self.point_id_input.setText(str(self.finance_data[1]) if self.finance_data[1] else "")
            
            current_type = self.finance_data[2] if self.finance_data[2] else "–î–æ—Ö–æ–¥"
            index = self.type_combo.findText(current_type)
            if index >= 0:
                self.type_combo.setCurrentIndex(index)
                
            self.amount_input.setText(str(self.finance_data[3]) if self.finance_data[3] else "")
            self.date_input.setText(str(self.finance_data[4]) if self.finance_data[4] else "")
            self.description_input.setText(self.finance_data[5] if self.finance_data[5] else "")

        form_layout.addRow("ID —Ç–æ—á–∫–∏:*", self.point_id_input)
        form_layout.addRow("–¢–∏–ø:*", self.type_combo)
        form_layout.addRow("–°—É–º–º–∞:*", self.amount_input)
        form_layout.addRow("–î–∞—Ç–∞ (–ì–ì–ì–ì-–ú–ú-–î–î):*", self.date_input)
        form_layout.addRow("–û–ø–∏—Å–∞–Ω–∏–µ:", self.description_input)

        layout.addLayout(form_layout)

        buttons_layout = QHBoxLayout()
        self.save_btn = QPushButton("–°–æ—Ö—Ä–∞–Ω–∏—Ç—å")
        self.cancel_btn = QPushButton("–û—Ç–º–µ–Ω–∞")

        self.save_btn.clicked.connect(self.accept)
        self.cancel_btn.clicked.connect(self.reject)

        buttons_layout.addWidget(self.save_btn)
        buttons_layout.addWidget(self.cancel_btn)

        layout.addLayout(buttons_layout)
        self.setLayout(layout)

    def get_data(self):
        return {
            'point_id': self.point_id_input.text().strip(),
            'type': self.type_combo.currentText(),
            'amount': self.amount_input.text().strip(),
            'date': self.date_input.text().strip(),
            'description': self.description_input.text().strip() or None
        }