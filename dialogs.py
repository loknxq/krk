from PySide6.QtWidgets import (QDialog, QVBoxLayout, QHBoxLayout, QFormLayout,
    QLineEdit, QPushButton, QLabel, QTextEdit,
    QTableWidget, QTableWidgetItem, QHeaderView,
    QTabWidget, QWidget, QGroupBox, QMessageBox)
from PySide6.QtCore import Qt
import logging

class ConnectionDialog(QDialog):
    def __init__(self, db_manager, parent=None):
        super().__init__(parent)
        self.db_manager = db_manager
        self.setWindowTitle("–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–∞–∑–µ –î–∞–Ω–Ω—ã—Ö")
        self.setFixedSize(600, 350)
        self.setup_ui()
        self.load_current_params()

    def setup_ui(self):
        layout = QVBoxLayout()

        # –§–æ—Ä–º–∞ –≤–≤–æ–¥–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
        form_layout = QFormLayout()

        self.host_input = QLineEdit()
        self.port_input = QLineEdit()
        self.dbname_input = QLineEdit()
        self.user_input = QLineEdit()
        self.password_input = QLineEdit()
        self.password_input.setEchoMode(QLineEdit.Password)

        form_layout.addRow("–•–æ—Å—Ç:", self.host_input)
        form_layout.addRow("–ü–æ—Ä—Ç:", self.port_input)
        form_layout.addRow("–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö:", self.dbname_input)
        form_layout.addRow("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:", self.user_input)
        form_layout.addRow("–ü–∞—Ä–æ–ª—å:", self.password_input)

        layout.addLayout(form_layout)

        # –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
        buttons_layout = QHBoxLayout()

        self.connect_btn = QPushButton("–ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è")
        self.recreate_btn = QPushButton("–ü–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å —Ç–∞–±–ª–∏—Ü—ã")
        self.env_btn = QPushButton("–í–∑—è—Ç—å –∏–∑ –æ–∫—Ä—É–∂–µ–Ω–∏—è")

        self.connect_btn.clicked.connect(self.connect)
        self.recreate_btn.clicked.connect(self.recreate_tables)
        self.env_btn.clicked.connect(self.load_from_env)

        buttons_layout.addWidget(self.connect_btn)
        buttons_layout.addWidget(self.recreate_btn)
        buttons_layout.addWidget(self.env_btn)

        layout.addLayout(buttons_layout)

        # –°—Ç–∞—Ç—É—Å
        self.status_label = QLabel("üòî –ù–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–æ")
        self.status_label.setAlignment(Qt.AlignCenter)
        self.status_label.setStyleSheet("color: #d9534f; font-weight: bold;")
        layout.addWidget(self.status_label)

        self.setLayout(layout)

    def load_current_params(self):
        params = self.db_manager.get_connection_params()
        self.host_input.setText(params.get('host', 'localhost'))
        self.port_input.setText(params.get('port', '5432'))
        self.dbname_input.setText(params.get('dbname', 'postgres'))
        self.user_input.setText(params.get('user', 'postgres'))
        self.password_input.setText(params.get('password', ''))

    def connect(self):
        params = {
            'host': self.host_input.text(),
            'port': self.port_input.text(),
            'dbname': self.dbname_input.text(),
            'user': self.user_input.text(),
            'password': self.password_input.text()
        }

        self.db_manager.set_connection_params(params)

        if self.db_manager.connect():
            self.status_label.setText("üåû –ü–æ–¥–∫–ª—é—á–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ")
            self.status_label.setStyleSheet("color: #90cb25; font-weight: bold;")
        else:
            self.status_label.setText("üò† –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è")
            self.status_label.setStyleSheet("color: #d9534f; font-weight: bold;")

    def recreate_tables(self):
        """–û—Ç–∫—Ä—ã–≤–∞–µ—Ç –¥–∏–∞–ª–æ–≥ –≤—ã–±–æ—Ä–∞ –¥–µ–π—Å—Ç–≤–∏—è —Å —Ç–∞–±–ª–∏—Ü–∞–º–∏"""
        dialog = RecreateTablesDialog(self.db_manager, self)
        if dialog.exec() == QDialog.Accepted:
            action_type = dialog.get_action_type()
            
            if action_type == '–¥—â—Ñ':
                self.clear_tables_action()
            elif action_type == 'sample_data':
                self.sample_data_action()
            elif action_type == 'recreate':
                self.recreate_tables_action()

    def clear_tables_action(self):
        """–û—á–∏—â–∞–µ—Ç —Ç–∞–±–ª–∏—Ü—ã"""
        if self.db_manager.clear_tables():
            QMessageBox.information(self, "–£—Å–ø–µ—Ö", "–¢–∞–±–ª–∏—Ü—ã —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω—ã")
        else:
            QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–ù–µ —É–¥–∞–ª–æ—Å—å –æ—á–∏—Å—Ç–∏—Ç—å —Ç–∞–±–ª–∏—Ü—ã")

    def sample_data_action(self):
        """–í—Å—Ç–∞–≤–ª—è–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ"""
        if self.db_manager.insert_sample_data():
            QMessageBox.information(self, "–£—Å–ø–µ—Ö", "–¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã")
        else:
            QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ")

    def recreate_tables_action(self):
        """–ü–æ–ª–Ω–æ—Å—Ç—å—é –ø–µ—Ä–µ—Å–æ–∑–¥–∞–µ—Ç —Ç–∞–±–ª–∏—Ü—ã"""
        if self.db_manager.recreate_tables():
            QMessageBox.information(self, "–£—Å–ø–µ—Ö", "–¢–∞–±–ª–∏—Ü—ã —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω—ã")
        else:
            QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å —Ç–∞–±–ª–∏—Ü—ã")

    def load_from_env(self):
        self.db_manager.load_from_environment()
        self.load_current_params()
        self.status_label.setText("–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ –æ–∫—Ä—É–∂–µ–Ω–∏—è")

class LoggerDialog(QDialog):
    def __init__(self, db_manager, parent=None):
        super().__init__(parent)
        self.db_manager = db_manager
        self.setWindowTitle("–õ–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
        self.setMinimumSize(600, 400)
        self.setup_ui()
        self.load_logs()

    def setup_ui(self):
        layout = QVBoxLayout()

        self.log_text = QTextEdit()
        self.log_text.setReadOnly(True)
        self.log_text.setObjectName("Logger")

        refresh_btn = QPushButton("–û–±–Ω–æ–≤–∏—Ç—å –ª–æ–≥–∏")
        refresh_btn.clicked.connect(self.load_logs)

        layout.addWidget(QLabel("–õ–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:"))
        layout.addWidget(self.log_text)
        layout.addWidget(refresh_btn)

        self.setLayout(layout)

    def load_logs(self):
        logs = self.db_manager.get_logs()
        self.log_text.setPlainText(''.join(logs[-100:]))

class DataViewDialog(QDialog):
    def __init__(self, db_manager, parent=None):
        super().__init__(parent)
        self.db_manager = db_manager
        self.setWindowTitle("–ü—Ä–æ—Å–º–æ—Ç—Ä –¥–∞–Ω–Ω—ã—Ö")
        self.setMinimumSize(800, 600)
        self.setup_ui()
        self.load_data()

    def setup_ui(self):
        layout = QVBoxLayout()

        self.tabs = QTabWidget()

        # –°–æ–∑–¥–∞–µ–º –≤–∫–ª–∞–¥–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–π —Ç–∞–±–ª–∏—Ü—ã
        self.points_tab = self.create_table_tab("–¢–æ—á–∫–∏", ["ID", "–ê–¥—Ä–µ—Å", "–¢–µ–ª–µ—Ñ–æ–Ω", "–ú–µ–Ω–µ–¥–∂–µ—Ä ID"])
        self.employees_tab = self.create_table_tab("–°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏", ["ID", "–§–ò–û", "–î–æ–ª–∂–Ω–æ—Å—Ç—å", "–ó–∞—Ä–ø–ª–∞—Ç–∞", "–ì—Ä–∞—Ñ–∏–∫", "–¢–æ—á–∫–∞ ID"])
        self.products_tab = self.create_table_tab("–ü—Ä–æ–¥—É–∫—Ç—ã", ["ID", "–ù–∞–∑–≤–∞–Ω–∏–µ", "–ö–∞—Ç–µ–≥–æ—Ä–∏—è", "–°–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç—å", "–¶–µ–Ω–∞ –ø—Ä–æ–¥–∞–∂–∏"])
        self.finances_tab = self.create_table_tab("–§–∏–Ω–∞–Ω—Å—ã", ["ID", "–¢–æ—á–∫–∞ ID", "–¢–∏–ø", "–°—É–º–º–∞", "–î–∞—Ç–∞", "–û–ø–∏—Å–∞–Ω–∏–µ"])
        self.supplies_tab = self.create_table_tab("–ü–æ—Å—Ç–∞–≤–∫–∏", ["ID", "–ü—Ä–æ–¥—É–∫—Ç ID", "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ", "–î–∞—Ç–∞ –ø–æ—Å—Ç–∞–≤–∫–∏", "–°—Ä–æ–∫ –≥–æ–¥–Ω–æ—Å—Ç–∏"])

        self.tabs.addTab(self.points_tab, "–¢–æ—á–∫–∏")
        self.tabs.addTab(self.employees_tab, "–°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏")
        self.tabs.addTab(self.products_tab, "–ü—Ä–æ–¥—É–∫—Ç—ã")
        self.tabs.addTab(self.finances_tab, "–§–∏–Ω–∞–Ω—Å—ã")
        self.tabs.addTab(self.supplies_tab, "–ü–æ—Å—Ç–∞–≤–∫–∏")

        layout.addWidget(self.tabs)
        self.setLayout(layout)

    def create_table_tab(self, title, headers):
        widget = QWidget()
        layout = QVBoxLayout(widget)

        table = QTableWidget(0, len(headers))
        table.setHorizontalHeaderLabels(headers)
        table.horizontalHeader().setSectionResizeMode(QHeaderView.Stretch)

        layout.addWidget(QLabel(f"–¢–∞–±–ª–∏—Ü–∞: {title}"))
        layout.addWidget(table)
        
        return widget

    def load_data(self):
        """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤ —Ç–∞–±–ª–∏—Ü—ã"""
        try:
            # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã
            for i in range(self.tabs.count()):
                tab_widget = self.tabs.widget(i)
                table = tab_widget.findChild(QTableWidget)
                if table:
                    if i == 0:
                        data = self.db_manager.get_points()
                    elif i == 1:
                        data = self.db_manager.get_employees()
                    elif i == 2:
                        data = self.db_manager.get_products()
                    elif i == 3:
                        data = self.db_manager.get_finances()
                    elif i == 4:
                        data = self.db_manager.get_supplies()
                    else:
                        data = []
                    
                    self.load_table_data(table, data)
                    
        except Exception as e:
            logging.error(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö: {str(e)}")
            QMessageBox.warning(self, "–û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ: {str(e)}")

    def load_table_data(self, table, data):
        if not data:
            table.setRowCount(1)
            table.setItem(0, 0, QTableWidgetItem("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö"))
            return
            
        table.setRowCount(len(data))
        for row_idx, row_data in enumerate(data):
            for col_idx, cell_data in enumerate(row_data):
                item = QTableWidgetItem(str(cell_data) if cell_data is not None else "")
                item.setFlags(item.flags() & ~Qt.ItemIsEditable)
                table.setItem(row_idx, col_idx, item)

class AddDataDialog(QDialog):
    def __init__(self, db_manager, parent=None):
        super().__init__(parent)
        self.db_manager = db_manager
        self.setWindowTitle("–î–æ–±–∞–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ")
        self.setFixedSize(300, 600)
        self.setup_ui()

    def setup_ui(self):
        layout = QVBoxLayout()

        label = QLabel("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è:")
        layout.addWidget(label)

        self.point_btn = QPushButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ç–æ—á–∫—É")
        self.employee_btn = QPushButton("üë®‚Äçüíº –î–æ–±–∞–≤–∏—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞")
        self.product_btn = QPushButton("üçü –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç")
        self.finances_btn = QPushButton("üí∞ –î–æ–±–∞–≤–∏—Ç—å —Ñ–∏–Ω–∞–Ω—Å–æ–≤—É—é –æ–ø–µ—Ä–∞—Ü–∏—é")
        self.supplies_btn = QPushButton("üööüí® –î–æ–±–∞–≤–∏—Ç—å –ø–æ—Å—Ç–∞–≤–∫—É")

        self.point_btn.clicked.connect(lambda: self.accept_with_type('point'))
        self.employee_btn.clicked.connect(lambda: self.accept_with_type('employee'))
        self.product_btn.clicked.connect(lambda: self.accept_with_type('product'))
        self.finances_btn.clicked.connect(lambda: self.accept_with_type('finances'))
        self.supplies_btn.clicked.connect(lambda: self.accept_with_type('supplies'))

        layout.addWidget(self.point_btn)
        layout.addWidget(self.employee_btn)
        layout.addWidget(self.product_btn)
        layout.addWidget(self.finances_btn)
        layout.addWidget(self.supplies_btn)

        cancel_btn = QPushButton("–û—Ç–º–µ–Ω–∞")
        cancel_btn.clicked.connect(self.reject)
        layout.addWidget(cancel_btn)

        self.setLayout(layout)
        self.data_type = None

    def accept_with_type(self, data_type):
        self.data_type = data_type
        super().accept()

    def get_data_type(self):
        return self.data_type

class AddPointDialog(QDialog):
    def __init__(self, parent=None):
        super().__init__(parent)
        self.setWindowTitle("–î–æ–±–∞–≤–∏—Ç—å —Ç–æ—á–∫—É")
        self.setFixedSize(400, 200)
        self.setup_ui()

    def setup_ui(self):
        layout = QVBoxLayout()

        form_layout = QFormLayout()

        self.address_input = QLineEdit()
        self.phone_input = QLineEdit()

        form_layout.addRow("–ê–¥—Ä–µ—Å:*", self.address_input)
        form_layout.addRow("–¢–µ–ª–µ—Ñ–æ–Ω:", self.phone_input)

        layout.addLayout(form_layout)

        buttons_layout = QHBoxLayout()
        self.add_btn = QPushButton("–î–æ–±–∞–≤–∏—Ç—å")
        self.cancel_btn = QPushButton("–û—Ç–º–µ–Ω–∞")

        self.add_btn.clicked.connect(self.accept)
        self.cancel_btn.clicked.connect(self.reject)

        buttons_layout.addWidget(self.add_btn)
        buttons_layout.addWidget(self.cancel_btn)

        layout.addLayout(buttons_layout)
        self.setLayout(layout)

    def get_data(self):
        return {
            'address': self.address_input.text().strip(),
            'phone': self.phone_input.text().strip() or None
        }

class AddEmployeeDialog(QDialog):
    def __init__(self, parent=None):
        super().__init__(parent)
        self.setWindowTitle("–î–æ–±–∞–≤–∏—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞")
        self.setFixedSize(400, 300)
        self.setup_ui()

    def setup_ui(self):
        layout = QVBoxLayout()

        form_layout = QFormLayout()

        self.name_input = QLineEdit()
        self.position_input = QLineEdit()
        self.salary_input = QLineEdit()
        self.schedule_input = QLineEdit()
        self.point_id_input = QLineEdit()

        form_layout.addRow("–§–ò–û:*", self.name_input)
        form_layout.addRow("–î–æ–ª–∂–Ω–æ—Å—Ç—å:*", self.position_input)
        form_layout.addRow("–ó–∞—Ä–ø–ª–∞—Ç–∞:*", self.salary_input)
        form_layout.addRow("–ì—Ä–∞—Ñ–∏–∫:*", self.schedule_input)
        form_layout.addRow("ID —Ç–æ—á–∫–∏:*", self.point_id_input)

        layout.addLayout(form_layout)

        buttons_layout = QHBoxLayout()
        self.add_btn = QPushButton("–î–æ–±–∞–≤–∏—Ç—å")
        self.cancel_btn = QPushButton("–û—Ç–º–µ–Ω–∞")

        self.add_btn.clicked.connect(self.accept)
        self.cancel_btn.clicked.connect(self.reject)

        buttons_layout.addWidget(self.add_btn)
        buttons_layout.addWidget(self.cancel_btn)

        layout.addLayout(buttons_layout)
        self.setLayout(layout)

    def get_data(self):
        return {
            'full_name': self.name_input.text().strip(),
            'position': self.position_input.text().strip(),
            'salary': self.salary_input.text().strip(),
            'schedule': self.schedule_input.text().strip(),
            'point_id': self.point_id_input.text().strip()
        }
    
class AddProductDialog(QDialog):
    def __init__(self, parent=None):
        super().__init__(parent)
        self.setWindowTitle("–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç")
        self.setFixedSize(400, 300)
        self.setup_ui()

    def setup_ui(self):
        layout = QVBoxLayout()

        form_layout = QFormLayout()

        self.name_input = QLineEdit()
        self.category_input = QLineEdit()
        self.cost_input = QLineEdit()
        self.price_input = QLineEdit()

        form_layout.addRow("–ù–∞–∑–≤–∞–Ω–∏–µ:*", self.name_input)
        form_layout.addRow("–ö–∞—Ç–µ–≥–æ—Ä–∏—è:*", self.category_input)
        form_layout.addRow("–°–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç—å:*", self.cost_input)
        form_layout.addRow("–¶–µ–Ω–∞ –ø—Ä–æ–¥–∞–∂–∏:*", self.price_input)

        layout.addLayout(form_layout)

        buttons_layout = QHBoxLayout()
        self.add_btn = QPushButton("–î–æ–±–∞–≤–∏—Ç—å")
        self.cancel_btn = QPushButton("–û—Ç–º–µ–Ω–∞")

        self.add_btn.clicked.connect(self.accept)
        self.cancel_btn.clicked.connect(self.reject)

        buttons_layout.addWidget(self.add_btn)
        buttons_layout.addWidget(self.cancel_btn)

        layout.addLayout(buttons_layout)
        self.setLayout(layout)

    def get_data(self):
        return {
            'name': self.name_input.text().strip(),
            'category': self.category_input.text().strip(),
            'cost_price': self.cost_input.text().strip(),
            'selling_price': self.price_input.text().strip()
        }
class RecreateTablesDialog(QDialog):
    def __init__(self, db_manager, parent=None):
        super().__init__(parent)
        self.db_manager = db_manager
        self.setWindowTitle("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü–∞–º–∏")
        self.setFixedSize(400, 200)
        self.setup_ui()

    def setup_ui(self):
        layout = QVBoxLayout()

        label = QLabel("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ —Å —Ç–∞–±–ª–∏—Ü–∞–º–∏:")
        label.setAlignment(Qt.AlignCenter)
        layout.addWidget(label)

        # –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
        self.clear_btn = QPushButton("üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å —Ç–∞–±–ª–∏—Ü—ã (—É–¥–∞–ª–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ)")
        self.sample_data_btn = QPushButton("üìä –í—Å—Ç–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ")
        self.recreate_btn = QPushButton("üîÑ –ü–æ–ª–Ω–æ—Å—Ç—å—é –ø–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å —Ç–∞–±–ª–∏—Ü—ã")

        self.clear_btn.clicked.connect(lambda: self.accept_with_action('clear'))
        self.sample_data_btn.clicked.connect(lambda: self.accept_with_action('sample_data'))
        self.recreate_btn.clicked.connect(lambda: self.accept_with_action('recreate'))

        layout.addWidget(self.clear_btn)
        layout.addWidget(self.sample_data_btn)
        layout.addWidget(self.recreate_btn)

        cancel_btn = QPushButton("–û—Ç–º–µ–Ω–∞")
        cancel_btn.clicked.connect(self.reject)
        layout.addWidget(cancel_btn)

        self.setLayout(layout)
        self.action_type = None

    def accept_with_action(self, action_type):
        self.action_type = action_type
        super().accept()

    def get_action_type(self):
        return self.action_type